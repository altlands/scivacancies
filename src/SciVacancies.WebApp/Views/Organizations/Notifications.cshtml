@using System.Threading.Tasks
@using SciVacancies.WebApp
@using SciVacancies.WebApp.Controllers
@model SciVacancies.WebApp.ViewModels.NotificationsInOrganizationIndexViewModel

<div class="crumbs">
    <a href="/">Главная</a><span class="separator">/</span>
    <a asp-controller="organizations" asp-action="account">@Model.Name</a><span class="separator">/</span>
    @ViewBag.Title
</div>

<h3>Карточка организации</h3>

@Component.Invoke("AccountTabs", typeof(OrganizationsController))

<h4>@ViewBag.Title</h4>

<div class="table-control">
    <!-- <a href="#" class="close-table"><span class="italic">Очистить фильтры</span></a> -->
    <a href="@Context.Request.Path.Value" class="reload-table"><span class="italic">Обновить список</span></a>
    <a href="#" class="mail-td-icon"></a><a href="#"><span class="italic">Оповещения выключить</span></a>
    <a href="#" class="unmail-td-icon"></a><a href="#"><span class="italic">Оповещения включить</span></a>
</div>

<table class="table request-table">
    <thead>
    <tr>
        <th>
            <div class="inline-block"><img src="/images/icons/arrow-bottom-tab.png" class="va-middle"/>
            </div>
            <div class="inline-block ml6 va-middle">№</div></th>
        <th>
            <div class="inline-block"><img src="/images/icons/tab-head.png" class="va-middle">
            </div>
            <div class="inline-block ml6 va-middle">Дата</div></th>
        <th>
            <div class="inline-block"><img src="/images/icons/tab-head.png" class="va-middle">
            </div>
            <div class="inline-block ml6 va-middle">Вакансия</div></th>
        <th>
            <div class="inline-block"><img src="/images/icons/tab-head.png" class="va-middle">
            </div>
            <div class="inline-block ml6 va-middle">Текст</div></th>
        <th>
            <div class="pl21 va-middle lh30">Действия</div></th>
    </tr>
    </thead>
    <tbody>
    @if (Model.PagedNotifications != null)
    {
        foreach (var item in Model.PagedNotifications.Items)
        {
            var unreadClass = item.UpdateDate.HasValue ? string.Empty : "bold";
            <text>
                <tr>

                    <td class="@unreadClass">@item.Guid.ToString().Substring(0, 4)...</td>
                    <td class="@unreadClass">@item.CreationDate.ToLocalVacancyString()</td>
                    <td class="@unreadClass">Исследователь @item.ResearcherGuid</td>
                    <td class="@unreadClass"><a href="#" class="success-request-icon"><span class="italic bold">@item.Title</span></a></td>
                    <td>
                        <a href="#" class="view-td-icon open-popup"></a>
                        <a href="#" class="close-td-icon"></a>
                    </td>
                </tr>
            </text>
        }
    }
    </tbody>
</table>

<div pagedlist="Model.PagedNotifications"
     request="Context.Request">
</div>

<div class="b-bottom-nav">
    <a href="/" class="small-icon icon-prev">Главная</a>
    <a asp-controller="organizations" asp-action="account" class="small-icon icon-prev">@Model.Name</a>
</div>